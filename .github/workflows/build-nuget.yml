name: Build & Release NuGet Packages for PinkSea

on:
  push:
    branches:
      - master

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.11.0
        with:
          versionSpec: '5.x'

      - name: Determine version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.11.0

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Pack PinkSea.AtProto
        run: dotnet pack PinkSea.AtProto/PinkSea.AtProto.csproj --configuration Release --no-build --output ./nupkgs /p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }}

      - name: Pack PinkSea.AtProto.Server
        run: dotnet pack PinkSea.AtProto.Server/PinkSea.AtProto.Server.csproj --configuration Release --no-build --output ./nupkgs /p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }}

      - name: Pack PinkSea.AtProto.Shared
        run: dotnet pack PinkSea.AtProto.Shared/PinkSea.AtProto.Shared.csproj --configuration Release --no-build --output ./nupkgs /p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }}

      - name: Upload NuGet packages
        uses: actions/upload-artifact@v4
        with:
          name: NuGetPackages
          path: ./nupkgs

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.gitversion.outputs.semVer }}
          name: v${{ steps.gitversion.outputs.semVer }}
          files: ./nupkgs/*.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NuGet.org
        run: dotnet nuget push "./nupkgs/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
        if: secrets.NUGET_API_KEY != ''
